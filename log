
state 0

    (0) S' -> . statements
    (1) statements -> . statements SEMI statement
    (2) statements -> . statement
    (3) statement -> . IF LPAREN expr RPAREN _1_statements_repeat
    (9) statement -> . expr SEMI
    (10) statement -> . ID ASSIGN expr
    (11) expr -> . term
    (12) expr -> . expr MINUS term
    (13) expr -> . expr PLUS term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    IF              shift and go to state 3
    ID              shift and go to state 6
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expr                           shift and go to state 5
    term                           shift and go to state 7
    factor                         shift and go to state 8

state 1

    (0) S' -> statements .
    (1) statements -> statements . SEMI statement
    SEMI            shift and go to state 11


state 2

    (2) statements -> statement .
    SEMI            reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> IF . LPAREN expr RPAREN _1_statements_repeat
    LPAREN          shift and go to state 12


state 4

    (24) factor -> LPAREN . expr RPAREN
    (11) expr -> . term
    (12) expr -> . expr MINUS term
    (13) expr -> . expr PLUS term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 14
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    expr                           shift and go to state 13
    term                           shift and go to state 7
    factor                         shift and go to state 8

state 5

    (9) statement -> expr . SEMI
    (12) expr -> expr . MINUS term
    (13) expr -> expr . PLUS term
    SEMI            shift and go to state 15
    MINUS           shift and go to state 16
    PLUS            shift and go to state 17


state 6

    (10) statement -> ID . ASSIGN expr
    (14) term -> ID . LPAREN args RPAREN
    (23) factor -> ID .
    ASSIGN          shift and go to state 18
    LPAREN          shift and go to state 19
    GREATER         reduce using rule 23 (factor -> ID .)
    SMALLER         reduce using rule 23 (factor -> ID .)
    SOE             reduce using rule 23 (factor -> ID .)
    GOE             reduce using rule 23 (factor -> ID .)
    DIVIDE          reduce using rule 23 (factor -> ID .)
    TIMES           reduce using rule 23 (factor -> ID .)
    COMPARE         reduce using rule 23 (factor -> ID .)
    SEMI            reduce using rule 23 (factor -> ID .)
    MINUS           reduce using rule 23 (factor -> ID .)
    PLUS            reduce using rule 23 (factor -> ID .)


state 7

    (11) expr -> term .
    (16) term -> term . GREATER factor
    (17) term -> term . SMALLER factor
    (18) term -> term . SOE factor
    (19) term -> term . GOE factor
    (20) term -> term . DIVIDE factor
    (21) term -> term . TIMES factor
    (22) term -> term . COMPARE factor
    SEMI            reduce using rule 11 (expr -> term .)
    MINUS           reduce using rule 11 (expr -> term .)
    PLUS            reduce using rule 11 (expr -> term .)
    RPAREN          reduce using rule 11 (expr -> term .)
    $end            reduce using rule 11 (expr -> term .)
    IF              reduce using rule 11 (expr -> term .)
    ID              reduce using rule 11 (expr -> term .)
    LPAREN          reduce using rule 11 (expr -> term .)
    STRING          reduce using rule 11 (expr -> term .)
    NUMBER          reduce using rule 11 (expr -> term .)
    COMMA           reduce using rule 11 (expr -> term .)
    GREATER         shift and go to state 20
    SMALLER         shift and go to state 21
    SOE             shift and go to state 22
    GOE             shift and go to state 23
    DIVIDE          shift and go to state 24
    TIMES           shift and go to state 25
    COMPARE         shift and go to state 26


state 8

    (15) term -> factor .
    GREATER         reduce using rule 15 (term -> factor .)
    SMALLER         reduce using rule 15 (term -> factor .)
    SOE             reduce using rule 15 (term -> factor .)
    GOE             reduce using rule 15 (term -> factor .)
    DIVIDE          reduce using rule 15 (term -> factor .)
    TIMES           reduce using rule 15 (term -> factor .)
    COMPARE         reduce using rule 15 (term -> factor .)
    SEMI            reduce using rule 15 (term -> factor .)
    MINUS           reduce using rule 15 (term -> factor .)
    PLUS            reduce using rule 15 (term -> factor .)
    RPAREN          reduce using rule 15 (term -> factor .)
    $end            reduce using rule 15 (term -> factor .)
    IF              reduce using rule 15 (term -> factor .)
    ID              reduce using rule 15 (term -> factor .)
    LPAREN          reduce using rule 15 (term -> factor .)
    STRING          reduce using rule 15 (term -> factor .)
    NUMBER          reduce using rule 15 (term -> factor .)
    COMMA           reduce using rule 15 (term -> factor .)


state 9

    (25) factor -> STRING .
    GREATER         reduce using rule 25 (factor -> STRING .)
    SMALLER         reduce using rule 25 (factor -> STRING .)
    SOE             reduce using rule 25 (factor -> STRING .)
    GOE             reduce using rule 25 (factor -> STRING .)
    DIVIDE          reduce using rule 25 (factor -> STRING .)
    TIMES           reduce using rule 25 (factor -> STRING .)
    COMPARE         reduce using rule 25 (factor -> STRING .)
    SEMI            reduce using rule 25 (factor -> STRING .)
    MINUS           reduce using rule 25 (factor -> STRING .)
    PLUS            reduce using rule 25 (factor -> STRING .)
    RPAREN          reduce using rule 25 (factor -> STRING .)
    $end            reduce using rule 25 (factor -> STRING .)
    IF              reduce using rule 25 (factor -> STRING .)
    ID              reduce using rule 25 (factor -> STRING .)
    LPAREN          reduce using rule 25 (factor -> STRING .)
    STRING          reduce using rule 25 (factor -> STRING .)
    NUMBER          reduce using rule 25 (factor -> STRING .)
    COMMA           reduce using rule 25 (factor -> STRING .)


state 10

    (26) factor -> NUMBER .
    GREATER         reduce using rule 26 (factor -> NUMBER .)
    SMALLER         reduce using rule 26 (factor -> NUMBER .)
    SOE             reduce using rule 26 (factor -> NUMBER .)
    GOE             reduce using rule 26 (factor -> NUMBER .)
    DIVIDE          reduce using rule 26 (factor -> NUMBER .)
    TIMES           reduce using rule 26 (factor -> NUMBER .)
    COMPARE         reduce using rule 26 (factor -> NUMBER .)
    SEMI            reduce using rule 26 (factor -> NUMBER .)
    MINUS           reduce using rule 26 (factor -> NUMBER .)
    PLUS            reduce using rule 26 (factor -> NUMBER .)
    RPAREN          reduce using rule 26 (factor -> NUMBER .)
    $end            reduce using rule 26 (factor -> NUMBER .)
    IF              reduce using rule 26 (factor -> NUMBER .)
    ID              reduce using rule 26 (factor -> NUMBER .)
    LPAREN          reduce using rule 26 (factor -> NUMBER .)
    STRING          reduce using rule 26 (factor -> NUMBER .)
    NUMBER          reduce using rule 26 (factor -> NUMBER .)
    COMMA           reduce using rule 26 (factor -> NUMBER .)


state 11

    (1) statements -> statements SEMI . statement
    (3) statement -> . IF LPAREN expr RPAREN _1_statements_repeat
    (9) statement -> . expr SEMI
    (10) statement -> . ID ASSIGN expr
    (11) expr -> . term
    (12) expr -> . expr MINUS term
    (13) expr -> . expr PLUS term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    IF              shift and go to state 3
    ID              shift and go to state 6
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    statement                      shift and go to state 27
    expr                           shift and go to state 5
    term                           shift and go to state 7
    factor                         shift and go to state 8

state 12

    (3) statement -> IF LPAREN . expr RPAREN _1_statements_repeat
    (11) expr -> . term
    (12) expr -> . expr MINUS term
    (13) expr -> . expr PLUS term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 14
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    expr                           shift and go to state 28
    term                           shift and go to state 7
    factor                         shift and go to state 8

state 13

    (24) factor -> LPAREN expr . RPAREN
    (12) expr -> expr . MINUS term
    (13) expr -> expr . PLUS term
    RPAREN          shift and go to state 29
    MINUS           shift and go to state 16
    PLUS            shift and go to state 17


state 14

    (14) term -> ID . LPAREN args RPAREN
    (23) factor -> ID .
  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 19
    GREATER         reduce using rule 23 (factor -> ID .)
    SMALLER         reduce using rule 23 (factor -> ID .)
    SOE             reduce using rule 23 (factor -> ID .)
    GOE             reduce using rule 23 (factor -> ID .)
    DIVIDE          reduce using rule 23 (factor -> ID .)
    TIMES           reduce using rule 23 (factor -> ID .)
    COMPARE         reduce using rule 23 (factor -> ID .)
    RPAREN          reduce using rule 23 (factor -> ID .)
    MINUS           reduce using rule 23 (factor -> ID .)
    PLUS            reduce using rule 23 (factor -> ID .)
    SEMI            reduce using rule 23 (factor -> ID .)
    $end            reduce using rule 23 (factor -> ID .)
    IF              reduce using rule 23 (factor -> ID .)
    ID              reduce using rule 23 (factor -> ID .)
    STRING          reduce using rule 23 (factor -> ID .)
    NUMBER          reduce using rule 23 (factor -> ID .)
    COMMA           reduce using rule 23 (factor -> ID .)


state 15

    (9) statement -> expr SEMI .
    SEMI            reduce using rule 9 (statement -> expr SEMI .)
    $end            reduce using rule 9 (statement -> expr SEMI .)
    IF              reduce using rule 9 (statement -> expr SEMI .)
    ID              reduce using rule 9 (statement -> expr SEMI .)
    LPAREN          reduce using rule 9 (statement -> expr SEMI .)
    STRING          reduce using rule 9 (statement -> expr SEMI .)
    NUMBER          reduce using rule 9 (statement -> expr SEMI .)


state 16

    (12) expr -> expr MINUS . term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 14
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    term                           shift and go to state 30
    factor                         shift and go to state 8

state 17

    (13) expr -> expr PLUS . term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 14
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    term                           shift and go to state 31
    factor                         shift and go to state 8

state 18

    (10) statement -> ID ASSIGN . expr
    (11) expr -> . term
    (12) expr -> . expr MINUS term
    (13) expr -> . expr PLUS term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 14
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    expr                           shift and go to state 32
    term                           shift and go to state 7
    factor                         shift and go to state 8

state 19

    (14) term -> ID LPAREN . args RPAREN
    (27) args -> . expr args_tail
    (11) expr -> . term
    (12) expr -> . expr MINUS term
    (13) expr -> . expr PLUS term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 14
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    args                           shift and go to state 33
    expr                           shift and go to state 34
    term                           shift and go to state 7
    factor                         shift and go to state 8

state 20

    (16) term -> term GREATER . factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 36
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    factor                         shift and go to state 35

state 21

    (17) term -> term SMALLER . factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 36
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    factor                         shift and go to state 37

state 22

    (18) term -> term SOE . factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 36
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    factor                         shift and go to state 38

state 23

    (19) term -> term GOE . factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 36
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    factor                         shift and go to state 39

state 24

    (20) term -> term DIVIDE . factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 36
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    factor                         shift and go to state 40

state 25

    (21) term -> term TIMES . factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 36
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    factor                         shift and go to state 41

state 26

    (22) term -> term COMPARE . factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 36
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    factor                         shift and go to state 42

state 27

    (1) statements -> statements SEMI statement .
    SEMI            reduce using rule 1 (statements -> statements SEMI statement .)
    $end            reduce using rule 1 (statements -> statements SEMI statement .)
    IF              reduce using rule 1 (statements -> statements SEMI statement .)
    ID              reduce using rule 1 (statements -> statements SEMI statement .)
    LPAREN          reduce using rule 1 (statements -> statements SEMI statement .)
    STRING          reduce using rule 1 (statements -> statements SEMI statement .)
    NUMBER          reduce using rule 1 (statements -> statements SEMI statement .)


state 28

    (3) statement -> IF LPAREN expr . RPAREN _1_statements_repeat
    (12) expr -> expr . MINUS term
    (13) expr -> expr . PLUS term
    RPAREN          shift and go to state 43
    MINUS           shift and go to state 16
    PLUS            shift and go to state 17


state 29

    (24) factor -> LPAREN expr RPAREN .
    GREATER         reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    SMALLER         reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    SOE             reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    GOE             reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    COMPARE         reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    SEMI            reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    $end            reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    IF              reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    ID              reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    LPAREN          reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    STRING          reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    NUMBER          reduce using rule 24 (factor -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 24 (factor -> LPAREN expr RPAREN .)


state 30

    (12) expr -> expr MINUS term .
    (16) term -> term . GREATER factor
    (17) term -> term . SMALLER factor
    (18) term -> term . SOE factor
    (19) term -> term . GOE factor
    (20) term -> term . DIVIDE factor
    (21) term -> term . TIMES factor
    (22) term -> term . COMPARE factor
    SEMI            reduce using rule 12 (expr -> expr MINUS term .)
    MINUS           reduce using rule 12 (expr -> expr MINUS term .)
    PLUS            reduce using rule 12 (expr -> expr MINUS term .)
    RPAREN          reduce using rule 12 (expr -> expr MINUS term .)
    $end            reduce using rule 12 (expr -> expr MINUS term .)
    IF              reduce using rule 12 (expr -> expr MINUS term .)
    ID              reduce using rule 12 (expr -> expr MINUS term .)
    LPAREN          reduce using rule 12 (expr -> expr MINUS term .)
    STRING          reduce using rule 12 (expr -> expr MINUS term .)
    NUMBER          reduce using rule 12 (expr -> expr MINUS term .)
    COMMA           reduce using rule 12 (expr -> expr MINUS term .)
    GREATER         shift and go to state 20
    SMALLER         shift and go to state 21
    SOE             shift and go to state 22
    GOE             shift and go to state 23
    DIVIDE          shift and go to state 24
    TIMES           shift and go to state 25
    COMPARE         shift and go to state 26


state 31

    (13) expr -> expr PLUS term .
    (16) term -> term . GREATER factor
    (17) term -> term . SMALLER factor
    (18) term -> term . SOE factor
    (19) term -> term . GOE factor
    (20) term -> term . DIVIDE factor
    (21) term -> term . TIMES factor
    (22) term -> term . COMPARE factor
    SEMI            reduce using rule 13 (expr -> expr PLUS term .)
    MINUS           reduce using rule 13 (expr -> expr PLUS term .)
    PLUS            reduce using rule 13 (expr -> expr PLUS term .)
    RPAREN          reduce using rule 13 (expr -> expr PLUS term .)
    $end            reduce using rule 13 (expr -> expr PLUS term .)
    IF              reduce using rule 13 (expr -> expr PLUS term .)
    ID              reduce using rule 13 (expr -> expr PLUS term .)
    LPAREN          reduce using rule 13 (expr -> expr PLUS term .)
    STRING          reduce using rule 13 (expr -> expr PLUS term .)
    NUMBER          reduce using rule 13 (expr -> expr PLUS term .)
    COMMA           reduce using rule 13 (expr -> expr PLUS term .)
    GREATER         shift and go to state 20
    SMALLER         shift and go to state 21
    SOE             shift and go to state 22
    GOE             shift and go to state 23
    DIVIDE          shift and go to state 24
    TIMES           shift and go to state 25
    COMPARE         shift and go to state 26


state 32

    (10) statement -> ID ASSIGN expr .
    (12) expr -> expr . MINUS term
    (13) expr -> expr . PLUS term
    SEMI            reduce using rule 10 (statement -> ID ASSIGN expr .)
    $end            reduce using rule 10 (statement -> ID ASSIGN expr .)
    IF              reduce using rule 10 (statement -> ID ASSIGN expr .)
    ID              reduce using rule 10 (statement -> ID ASSIGN expr .)
    LPAREN          reduce using rule 10 (statement -> ID ASSIGN expr .)
    STRING          reduce using rule 10 (statement -> ID ASSIGN expr .)
    NUMBER          reduce using rule 10 (statement -> ID ASSIGN expr .)
    MINUS           shift and go to state 16
    PLUS            shift and go to state 17


state 33

    (14) term -> ID LPAREN args . RPAREN
    RPAREN          shift and go to state 44


state 34

    (27) args -> expr . args_tail
    (12) expr -> expr . MINUS term
    (13) expr -> expr . PLUS term
    (28) args_tail -> . COMMA expr args_tail
    (29) args_tail -> .
    MINUS           shift and go to state 16
    PLUS            shift and go to state 17
    COMMA           shift and go to state 46
    RPAREN          reduce using rule 29 (args_tail -> .)

    args_tail                      shift and go to state 45

state 35

    (16) term -> term GREATER factor .
    GREATER         reduce using rule 16 (term -> term GREATER factor .)
    SMALLER         reduce using rule 16 (term -> term GREATER factor .)
    SOE             reduce using rule 16 (term -> term GREATER factor .)
    GOE             reduce using rule 16 (term -> term GREATER factor .)
    DIVIDE          reduce using rule 16 (term -> term GREATER factor .)
    TIMES           reduce using rule 16 (term -> term GREATER factor .)
    COMPARE         reduce using rule 16 (term -> term GREATER factor .)
    SEMI            reduce using rule 16 (term -> term GREATER factor .)
    MINUS           reduce using rule 16 (term -> term GREATER factor .)
    PLUS            reduce using rule 16 (term -> term GREATER factor .)
    RPAREN          reduce using rule 16 (term -> term GREATER factor .)
    $end            reduce using rule 16 (term -> term GREATER factor .)
    IF              reduce using rule 16 (term -> term GREATER factor .)
    ID              reduce using rule 16 (term -> term GREATER factor .)
    LPAREN          reduce using rule 16 (term -> term GREATER factor .)
    STRING          reduce using rule 16 (term -> term GREATER factor .)
    NUMBER          reduce using rule 16 (term -> term GREATER factor .)
    COMMA           reduce using rule 16 (term -> term GREATER factor .)


state 36

    (23) factor -> ID .
    GREATER         reduce using rule 23 (factor -> ID .)
    SMALLER         reduce using rule 23 (factor -> ID .)
    SOE             reduce using rule 23 (factor -> ID .)
    GOE             reduce using rule 23 (factor -> ID .)
    DIVIDE          reduce using rule 23 (factor -> ID .)
    TIMES           reduce using rule 23 (factor -> ID .)
    COMPARE         reduce using rule 23 (factor -> ID .)
    SEMI            reduce using rule 23 (factor -> ID .)
    MINUS           reduce using rule 23 (factor -> ID .)
    PLUS            reduce using rule 23 (factor -> ID .)
    RPAREN          reduce using rule 23 (factor -> ID .)
    $end            reduce using rule 23 (factor -> ID .)
    IF              reduce using rule 23 (factor -> ID .)
    ID              reduce using rule 23 (factor -> ID .)
    LPAREN          reduce using rule 23 (factor -> ID .)
    STRING          reduce using rule 23 (factor -> ID .)
    NUMBER          reduce using rule 23 (factor -> ID .)
    COMMA           reduce using rule 23 (factor -> ID .)


state 37

    (17) term -> term SMALLER factor .
    GREATER         reduce using rule 17 (term -> term SMALLER factor .)
    SMALLER         reduce using rule 17 (term -> term SMALLER factor .)
    SOE             reduce using rule 17 (term -> term SMALLER factor .)
    GOE             reduce using rule 17 (term -> term SMALLER factor .)
    DIVIDE          reduce using rule 17 (term -> term SMALLER factor .)
    TIMES           reduce using rule 17 (term -> term SMALLER factor .)
    COMPARE         reduce using rule 17 (term -> term SMALLER factor .)
    SEMI            reduce using rule 17 (term -> term SMALLER factor .)
    MINUS           reduce using rule 17 (term -> term SMALLER factor .)
    PLUS            reduce using rule 17 (term -> term SMALLER factor .)
    RPAREN          reduce using rule 17 (term -> term SMALLER factor .)
    $end            reduce using rule 17 (term -> term SMALLER factor .)
    IF              reduce using rule 17 (term -> term SMALLER factor .)
    ID              reduce using rule 17 (term -> term SMALLER factor .)
    LPAREN          reduce using rule 17 (term -> term SMALLER factor .)
    STRING          reduce using rule 17 (term -> term SMALLER factor .)
    NUMBER          reduce using rule 17 (term -> term SMALLER factor .)
    COMMA           reduce using rule 17 (term -> term SMALLER factor .)


state 38

    (18) term -> term SOE factor .
    GREATER         reduce using rule 18 (term -> term SOE factor .)
    SMALLER         reduce using rule 18 (term -> term SOE factor .)
    SOE             reduce using rule 18 (term -> term SOE factor .)
    GOE             reduce using rule 18 (term -> term SOE factor .)
    DIVIDE          reduce using rule 18 (term -> term SOE factor .)
    TIMES           reduce using rule 18 (term -> term SOE factor .)
    COMPARE         reduce using rule 18 (term -> term SOE factor .)
    SEMI            reduce using rule 18 (term -> term SOE factor .)
    MINUS           reduce using rule 18 (term -> term SOE factor .)
    PLUS            reduce using rule 18 (term -> term SOE factor .)
    RPAREN          reduce using rule 18 (term -> term SOE factor .)
    $end            reduce using rule 18 (term -> term SOE factor .)
    IF              reduce using rule 18 (term -> term SOE factor .)
    ID              reduce using rule 18 (term -> term SOE factor .)
    LPAREN          reduce using rule 18 (term -> term SOE factor .)
    STRING          reduce using rule 18 (term -> term SOE factor .)
    NUMBER          reduce using rule 18 (term -> term SOE factor .)
    COMMA           reduce using rule 18 (term -> term SOE factor .)


state 39

    (19) term -> term GOE factor .
    GREATER         reduce using rule 19 (term -> term GOE factor .)
    SMALLER         reduce using rule 19 (term -> term GOE factor .)
    SOE             reduce using rule 19 (term -> term GOE factor .)
    GOE             reduce using rule 19 (term -> term GOE factor .)
    DIVIDE          reduce using rule 19 (term -> term GOE factor .)
    TIMES           reduce using rule 19 (term -> term GOE factor .)
    COMPARE         reduce using rule 19 (term -> term GOE factor .)
    SEMI            reduce using rule 19 (term -> term GOE factor .)
    MINUS           reduce using rule 19 (term -> term GOE factor .)
    PLUS            reduce using rule 19 (term -> term GOE factor .)
    RPAREN          reduce using rule 19 (term -> term GOE factor .)
    $end            reduce using rule 19 (term -> term GOE factor .)
    IF              reduce using rule 19 (term -> term GOE factor .)
    ID              reduce using rule 19 (term -> term GOE factor .)
    LPAREN          reduce using rule 19 (term -> term GOE factor .)
    STRING          reduce using rule 19 (term -> term GOE factor .)
    NUMBER          reduce using rule 19 (term -> term GOE factor .)
    COMMA           reduce using rule 19 (term -> term GOE factor .)


state 40

    (20) term -> term DIVIDE factor .
    GREATER         reduce using rule 20 (term -> term DIVIDE factor .)
    SMALLER         reduce using rule 20 (term -> term DIVIDE factor .)
    SOE             reduce using rule 20 (term -> term DIVIDE factor .)
    GOE             reduce using rule 20 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 20 (term -> term DIVIDE factor .)
    TIMES           reduce using rule 20 (term -> term DIVIDE factor .)
    COMPARE         reduce using rule 20 (term -> term DIVIDE factor .)
    SEMI            reduce using rule 20 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 20 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 20 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 20 (term -> term DIVIDE factor .)
    $end            reduce using rule 20 (term -> term DIVIDE factor .)
    IF              reduce using rule 20 (term -> term DIVIDE factor .)
    ID              reduce using rule 20 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 20 (term -> term DIVIDE factor .)
    STRING          reduce using rule 20 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 20 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 20 (term -> term DIVIDE factor .)


state 41

    (21) term -> term TIMES factor .
    GREATER         reduce using rule 21 (term -> term TIMES factor .)
    SMALLER         reduce using rule 21 (term -> term TIMES factor .)
    SOE             reduce using rule 21 (term -> term TIMES factor .)
    GOE             reduce using rule 21 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 21 (term -> term TIMES factor .)
    TIMES           reduce using rule 21 (term -> term TIMES factor .)
    COMPARE         reduce using rule 21 (term -> term TIMES factor .)
    SEMI            reduce using rule 21 (term -> term TIMES factor .)
    MINUS           reduce using rule 21 (term -> term TIMES factor .)
    PLUS            reduce using rule 21 (term -> term TIMES factor .)
    RPAREN          reduce using rule 21 (term -> term TIMES factor .)
    $end            reduce using rule 21 (term -> term TIMES factor .)
    IF              reduce using rule 21 (term -> term TIMES factor .)
    ID              reduce using rule 21 (term -> term TIMES factor .)
    LPAREN          reduce using rule 21 (term -> term TIMES factor .)
    STRING          reduce using rule 21 (term -> term TIMES factor .)
    NUMBER          reduce using rule 21 (term -> term TIMES factor .)
    COMMA           reduce using rule 21 (term -> term TIMES factor .)


state 42

    (22) term -> term COMPARE factor .
    GREATER         reduce using rule 22 (term -> term COMPARE factor .)
    SMALLER         reduce using rule 22 (term -> term COMPARE factor .)
    SOE             reduce using rule 22 (term -> term COMPARE factor .)
    GOE             reduce using rule 22 (term -> term COMPARE factor .)
    DIVIDE          reduce using rule 22 (term -> term COMPARE factor .)
    TIMES           reduce using rule 22 (term -> term COMPARE factor .)
    COMPARE         reduce using rule 22 (term -> term COMPARE factor .)
    SEMI            reduce using rule 22 (term -> term COMPARE factor .)
    MINUS           reduce using rule 22 (term -> term COMPARE factor .)
    PLUS            reduce using rule 22 (term -> term COMPARE factor .)
    RPAREN          reduce using rule 22 (term -> term COMPARE factor .)
    $end            reduce using rule 22 (term -> term COMPARE factor .)
    IF              reduce using rule 22 (term -> term COMPARE factor .)
    ID              reduce using rule 22 (term -> term COMPARE factor .)
    LPAREN          reduce using rule 22 (term -> term COMPARE factor .)
    STRING          reduce using rule 22 (term -> term COMPARE factor .)
    NUMBER          reduce using rule 22 (term -> term COMPARE factor .)
    COMMA           reduce using rule 22 (term -> term COMPARE factor .)


state 43

    (3) statement -> IF LPAREN expr RPAREN . _1_statements_repeat
    (4) _1_statements_repeat -> . _1_statements_items
    (5) _1_statements_repeat -> .
    (6) _1_statements_items -> . _1_statements_items _1_statements_item
    (7) _1_statements_items -> . _1_statements_item
    (8) _1_statements_item -> . statements
    (1) statements -> . statements SEMI statement
    (2) statements -> . statement
    (3) statement -> . IF LPAREN expr RPAREN _1_statements_repeat
    (9) statement -> . expr SEMI
    (10) statement -> . ID ASSIGN expr
    (11) expr -> . term
    (12) expr -> . expr MINUS term
    (13) expr -> . expr PLUS term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMI            reduce using rule 5 (_1_statements_repeat -> .)
    $end            reduce using rule 5 (_1_statements_repeat -> .)
    IF              shift and go to state 3
    ID              shift and go to state 6
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    expr                           shift and go to state 5
    _1_statements_repeat           shift and go to state 47
    _1_statements_items            shift and go to state 48
    _1_statements_item             shift and go to state 49
    statements                     shift and go to state 50
    statement                      shift and go to state 2
    term                           shift and go to state 7
    factor                         shift and go to state 8

state 44

    (14) term -> ID LPAREN args RPAREN .
    GREATER         reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    SMALLER         reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    SOE             reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    GOE             reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    DIVIDE          reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    TIMES           reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    COMPARE         reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    SEMI            reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    MINUS           reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    PLUS            reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    $end            reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    IF              reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    ID              reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    LPAREN          reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    STRING          reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    NUMBER          reduce using rule 14 (term -> ID LPAREN args RPAREN .)
    COMMA           reduce using rule 14 (term -> ID LPAREN args RPAREN .)


state 45

    (27) args -> expr args_tail .
    RPAREN          reduce using rule 27 (args -> expr args_tail .)


state 46

    (28) args_tail -> COMMA . expr args_tail
    (11) expr -> . term
    (12) expr -> . expr MINUS term
    (13) expr -> . expr PLUS term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
    ID              shift and go to state 14
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    expr                           shift and go to state 51
    term                           shift and go to state 7
    factor                         shift and go to state 8

state 47

    (3) statement -> IF LPAREN expr RPAREN _1_statements_repeat .
    SEMI            reduce using rule 3 (statement -> IF LPAREN expr RPAREN _1_statements_repeat .)
    $end            reduce using rule 3 (statement -> IF LPAREN expr RPAREN _1_statements_repeat .)
    IF              reduce using rule 3 (statement -> IF LPAREN expr RPAREN _1_statements_repeat .)
    ID              reduce using rule 3 (statement -> IF LPAREN expr RPAREN _1_statements_repeat .)
    LPAREN          reduce using rule 3 (statement -> IF LPAREN expr RPAREN _1_statements_repeat .)
    STRING          reduce using rule 3 (statement -> IF LPAREN expr RPAREN _1_statements_repeat .)
    NUMBER          reduce using rule 3 (statement -> IF LPAREN expr RPAREN _1_statements_repeat .)


state 48

    (4) _1_statements_repeat -> _1_statements_items .
    (6) _1_statements_items -> _1_statements_items . _1_statements_item
    (8) _1_statements_item -> . statements
    (1) statements -> . statements SEMI statement
    (2) statements -> . statement
    (3) statement -> . IF LPAREN expr RPAREN _1_statements_repeat
    (9) statement -> . expr SEMI
    (10) statement -> . ID ASSIGN expr
    (11) expr -> . term
    (12) expr -> . expr MINUS term
    (13) expr -> . expr PLUS term
    (14) term -> . ID LPAREN args RPAREN
    (15) term -> . factor
    (16) term -> . term GREATER factor
    (17) term -> . term SMALLER factor
    (18) term -> . term SOE factor
    (19) term -> . term GOE factor
    (20) term -> . term DIVIDE factor
    (21) term -> . term TIMES factor
    (22) term -> . term COMPARE factor
    (23) factor -> . ID
    (24) factor -> . LPAREN expr RPAREN
    (25) factor -> . STRING
    (26) factor -> . NUMBER
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    SEMI            reduce using rule 4 (_1_statements_repeat -> _1_statements_items .)
    $end            reduce using rule 4 (_1_statements_repeat -> _1_statements_items .)
    IF              shift and go to state 3
    ID              shift and go to state 6
    LPAREN          shift and go to state 4
    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    _1_statements_item             shift and go to state 52
    statements                     shift and go to state 50
    statement                      shift and go to state 2
    expr                           shift and go to state 5
    term                           shift and go to state 7
    factor                         shift and go to state 8

state 49

    (7) _1_statements_items -> _1_statements_item .
    SEMI            reduce using rule 7 (_1_statements_items -> _1_statements_item .)
    $end            reduce using rule 7 (_1_statements_items -> _1_statements_item .)
    IF              reduce using rule 7 (_1_statements_items -> _1_statements_item .)
    ID              reduce using rule 7 (_1_statements_items -> _1_statements_item .)
    LPAREN          reduce using rule 7 (_1_statements_items -> _1_statements_item .)
    STRING          reduce using rule 7 (_1_statements_items -> _1_statements_item .)
    NUMBER          reduce using rule 7 (_1_statements_items -> _1_statements_item .)


state 50

    (8) _1_statements_item -> statements .
    (1) statements -> statements . SEMI statement
  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 8 (_1_statements_item -> statements .)
    IF              reduce using rule 8 (_1_statements_item -> statements .)
    ID              reduce using rule 8 (_1_statements_item -> statements .)
    LPAREN          reduce using rule 8 (_1_statements_item -> statements .)
    STRING          reduce using rule 8 (_1_statements_item -> statements .)
    NUMBER          reduce using rule 8 (_1_statements_item -> statements .)
    SEMI            shift and go to state 11


state 51

    (28) args_tail -> COMMA expr . args_tail
    (12) expr -> expr . MINUS term
    (13) expr -> expr . PLUS term
    (28) args_tail -> . COMMA expr args_tail
    (29) args_tail -> .
    MINUS           shift and go to state 16
    PLUS            shift and go to state 17
    COMMA           shift and go to state 46
    RPAREN          reduce using rule 29 (args_tail -> .)

    args_tail                      shift and go to state 53

state 52

    (6) _1_statements_items -> _1_statements_items _1_statements_item .
    SEMI            reduce using rule 6 (_1_statements_items -> _1_statements_items _1_statements_item .)
    $end            reduce using rule 6 (_1_statements_items -> _1_statements_items _1_statements_item .)
    IF              reduce using rule 6 (_1_statements_items -> _1_statements_items _1_statements_item .)
    ID              reduce using rule 6 (_1_statements_items -> _1_statements_items _1_statements_item .)
    LPAREN          reduce using rule 6 (_1_statements_items -> _1_statements_items _1_statements_item .)
    STRING          reduce using rule 6 (_1_statements_items -> _1_statements_items _1_statements_item .)
    NUMBER          reduce using rule 6 (_1_statements_items -> _1_statements_items _1_statements_item .)


state 53

    (28) args_tail -> COMMA expr args_tail .
    RPAREN          reduce using rule 28 (args_tail -> COMMA expr args_tail .)


Conflicts:

shift/reduce conflict for LPAREN in state 14 resolved as shift
shift/reduce conflict for IF in state 43 resolved as shift
shift/reduce conflict for ID in state 43 resolved as shift
shift/reduce conflict for LPAREN in state 43 resolved as shift
shift/reduce conflict for STRING in state 43 resolved as shift
shift/reduce conflict for NUMBER in state 43 resolved as shift
shift/reduce conflict for IF in state 48 resolved as shift
shift/reduce conflict for ID in state 48 resolved as shift
shift/reduce conflict for LPAREN in state 48 resolved as shift
shift/reduce conflict for STRING in state 48 resolved as shift
shift/reduce conflict for NUMBER in state 48 resolved as shift
shift/reduce conflict for SEMI in state 50 resolved as shift
None
